
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//По умолчанию скроем ряд элементов
	Для Каждого Стр Из СтрРазделить("Широта,Долгота,КоординатыПеремещенияШирота,КоординатыПеремещенияДолгота",",") Цикл
		Элементы[Стр].Видимость = Ложь;
	КонецЦикла;
	Элементы.ВыбратьИзДоступныхАдресовКлиента.Видимость = Ложь;
	
	Элементы.СтраницыАдресНазначения.ТекущаяСтраница = Элементы.СтраницаКарта;
	
	ТипыМедиаМатериалов = Новый Структура;
	ТипыМедиаМатериалов.Вставить("Видео",Перечисления.ТипыМедиаматериалов.Видео);
	ТипыМедиаМатериалов.Вставить("Фото",Перечисления.ТипыМедиаматериалов.Фото);
	ТипыМедиаМатериалов.Вставить("Аудио",Перечисления.ТипыМедиаматериалов.Аудио);
	
	Для Каждого Стр Из Объект.Медиаматериалы Цикл
		Стр.ЭтоСуществующийРанее = Истина;
		Если Стр.ТипМедиаматериала =  ТипыМедиаМатериалов.Видео Тогда
			Стр.КартинкаСтроки = БиблиотекаКартинок.Видео;
		ИначеЕсли Стр.ТипМедиаматериала =  ТипыМедиаМатериалов.Фото Тогда
			Стр.КартинкаСтроки = БиблиотекаКартинок.Фото;
		ИначеЕсли Стр.ТипМедиаматериала =  ТипыМедиаМатериалов.Аудио Тогда
			Стр.КартинкаСтроки = БиблиотекаКартинок.Аудио;
		КонецЕсли;
	КонецЦикла;
	
	//ТекстHTML = ПараметрыСеанса.ПутьКэшаКартыOSM;
	
	// ГОТОВИМ HTML для вывода
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.ОткрытьФайл(ПараметрыСеанса.ПутьКэшаКартыOSM, "UTF-8");
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	ЧтениеHTML.Закрыть();
	
	ЗапиcьHTML = Новый ЗаписьHTML;
	ЗапиcьHTML.УстановитьСтроку();
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(ДокументHTML, ЗапиcьHTML);
	ТекстHTML = ЗапиcьHTML.Закрыть();

КонецПроцедуры

#Область Детали

&НаКлиенте
Процедура КоординатыПеремещенияПриАктивизацииСтроки(Элемент)
	
	ТекМестоположениеТаблицаИдентификатор = "";
	
	ТекДанные = Элементы.КоординатыПеремещения.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("Идентификатор",ТекДанные.Идентификатор);
		Элементы.Медиаматериалы.ОтборСтрок = ОтборСтрок;
		Элементы.КомментарииИЗаметки.ОтборСтрок = ОтборСтрок;
		ТекМестоположениеТаблицаИдентификатор =  ТекДанные.Идентификатор;
	Иначе
		Элементы.Медиаматериалы.ОтборСтрок = Неопределено;
		Элементы.КомментарииИЗаметки.ОтборСтрок = Неопределено;
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура МедиаматериалыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если ПустаяСтрока(ТекМестоположениеТаблицаИдентификатор) Тогда	   
		   Возврат;		   
	 КонецЕсли;
	   
	 Идентификатор = ТекМестоположениеТаблицаИдентификатор;  
	 
	 ОбработкаВыбораМультимедиа = Новый ОписаниеОповещения("ЗавершенВыборМультимедиа", ЭтаФорма, Новый Структура("Идентификатор",Идентификатор));
	 КнопкиОтветы = Новый СписокЗначений;
	 КнопкиОтветы.Добавить("Фото");
	 КнопкиОтветы.Добавить("Видео");
	 КнопкиОтветы.Добавить("Аудио");
	 ПоказатьВопрос(ОбработкаВыбораМультимедиа, "Что хотите добавить ?", КнопкиОтветы,,,"Дополнительные материалы");
	 
КонецПроцедуры

&НаКлиенте
Процедура ЗавершенВыборМультимедиа(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Если Результат = "Фото" Тогда
			
			//ОбработкаЗакрытияФормы =  Новый ОписаниеОповещения("ЗавершеноСделатьФото", ЭтаФорма, ДополнительныеПараметры);
			ДополнительныеПараметры = Новый Структура("ДополнительныеПараметрыРодителя", ДополнительныеПараметры);
			ОткрытьФорму("ОбщаяФорма.СделатьФото",ДополнительныеПараметры,ЭтаФорма,Истина);
			
		ИначеЕсли   Результат = "Видео" Тогда
			
		ИначеЕсли  Результат = "Аудио" Тогда
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МедиаматериалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Медиаматериалы.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		
		Если ТекДанные.ТипМедиаматериала =  ТипыМедиаМатериалов.Фото Тогда
			
			Если ЗначениеЗаполнено(ТекДанные.АдресВременногоХранилища) Тогда
				ОткрытьФорму("ОбщаяФорма.ФормаПросмотраКартинки", Новый Структура("АдресКартинки", ТекДанные.АдресВременногоХранилища),ЭтаФорма,Истина);
			Иначе
				Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
					Данные = ПолучитьАдресВременногоХранилищаМедиаматериала(Объект.Ссылка,ТекДанные.Идентификатор,ТекДанные.Название, ТекДанные.ТипМедиаматериала);
					Если НЕ Данные = Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ТекДанные, Данные);
						ОткрытьФорму("ОбщаяФорма.ФормаПросмотраКартинки", Новый Структура("АдресКартинки", ТекДанные.АдресВременногоХранилища),ЭтаФорма,Истина);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьАдресВременногоХранилищаМедиаматериала(Ссылка, Идентификатор, Название, ТипМедиаматериала)
	
	ТипМедиаматериалаСтр = Строка(ТипМедиаматериала);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Идентификатор",Идентификатор);
	Запрос.УстановитьПараметр("Название",Название);
	Запрос.Текст = СтрШаблон("ВЫБРАТЬ
	               |	МаршрутыДоставкиМедиаматериалы.%1 КАК %1
	               |ИЗ
	               |	Справочник.МаршрутыДоставки.Медиаматериалы КАК МаршрутыДоставкиМедиаматериалы
	               |ГДЕ
	               |	МаршрутыДоставкиМедиаматериалы.Ссылка = &Ссылка
	               |	И МаршрутыДоставкиМедиаматериалы.Идентификатор = &Идентификатор
	               |	И МаршрутыДоставкиМедиаматериалы.Название = &Название", ТипМедиаматериалаСтр);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ХранилищеМедиа = Выборка[ТипМедиаматериалаСтр];
		
		Данные = ХранилищеМедиа.Получить();
		Если НЕ Данные = Неопределено Тогда
			
			Ответ = Новый Структура;
			Ответ.Вставить("АдресВременногоХранилища", ПоместитьВоВременноеХранилище(Данные.дд,Новый УникальныйИдентификатор));
			Ответ.Вставить("расширениефайла",  Данные.расширениефайла);
			
			Возврат Ответ;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ЗавершеноСделатьФото(Результат,ДополнительныеПараметры)
	
	Если НЕ Результат = Неопределено Тогда
		
		нов = Объект.Медиаматериалы.Добавить();
		нов.Идентификатор = Результат.Идентификатор;
		нов.КартинкаСтроки = БиблиотекаКартинок.Фото;
		нов.АдресВременногоХранилища = Результат.АдресДвоичныеДанные;
		нов.РасширениеФайла = Результат.РасширениеФайла;
		нов.ТипМедиаматериала = ТипыМедиаМатериалов.Фото;
		нов.Название = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоординатыПеремещенияПриИзменении(Элемент)
		 
	 Для каждого Стр Из Объект.КоординатыПеремещения Цикл
		 
		 Если ПустаяСтрока(Стр.Идентификатор) Тогда
			 Стр.Идентификатор =  Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
			 
	КонецЦикла;	
	 
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ФотоГотово" и  Параметр.УникальныйИдентификаторФормы = УникальныйИдентификатор Тогда
		
		       ЗавершеноСделатьФото(Параметр,Неопределено);

	ИначеЕсли ИмяСобытия = "ЗакрыласьФормаКонтрагента" И Объект.Клиент = Параметр Тогда
			   
			   ПолучениеДоступныхАдресовКонтрагентаКлиент();
			   
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучениеДоступныхАдресовКонтрагентаВызовСервера(КлиентСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КлиентыАдресаДоставки.АдресДоставки КАК АдресДоставки,
	               |	КлиентыАдресаДоставки.Регион КАК Регион,
	               |	КлиентыАдресаДоставки.Район КАК Район,
	               |	КлиентыАдресаДоставки.НаселенныйПункт КАК НаселенныйПункт,
	               |	КлиентыАдресаДоставки.Улица КАК Улица,
	               |	КлиентыАдресаДоставки.Дом КАК Дом,
	               |	КлиентыАдресаДоставки.Индекс КАК Индекс,
	               |	КлиентыАдресаДоставки.Широта КАК Широта,
	               |	КлиентыАдресаДоставки.Долгота КАК Долгота,
	               |	КлиентыАдресаДоставки.АдресныйОбъект КАК АдресныйОбъект
	               |ИЗ
	               |	Справочник.Клиенты.АдресаДоставки КАК КлиентыАдресаДоставки
	               |ГДЕ
	               |	КлиентыАдресаДоставки.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КлиентыАдресаДоставки.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", КлиентСсылка);
	
	МассивДанныеОтвет = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МассивЭлемент = Новый Массив;
		МассивЭлемент.Добавить(выборка.АдресДоставки);
		МассивЭлемент.Добавить(выборка.Регион);
		МассивЭлемент.Добавить(выборка.Район);
		МассивЭлемент.Добавить(выборка.НаселенныйПункт);
		МассивЭлемент.Добавить(выборка.Улица);
		МассивЭлемент.Добавить(выборка.Дом);
		МассивЭлемент.Добавить(выборка.Индекс);
		МассивЭлемент.Добавить(выборка.Широта);
		МассивЭлемент.Добавить(выборка.Долгота);
		МассивЭлемент.Добавить(выборка.АдресныйОбъект);
		
		
		МассивДанныеОтвет.Добавить(МассивЭлемент);
		
	КонецЦикла;
	
	Возврат МассивДанныеОтвет;
	
КонецФункции

&НаКлиенте
Процедура ПолучениеДоступныхАдресовКонтрагентаКлиент()
	
	АдресаДоставкиКлиент.Очистить();
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		ДанныеАдресаКонтрагента = ПолучениеДоступныхАдресовКонтрагентаВызовСервера(Объект.Клиент); 		
		КоличествоЗаписей =  ДанныеАдресаКонтрагента.Количество();
		Если КоличествоЗаписей > 0 Тогда
			Для каждого Стр Из ДанныеАдресаКонтрагента Цикл
				нов = АдресаДоставкиКлиент.Добавить();
				нов.АдресДоставки =  Стр[0];
				нов.Регион = Стр[1];
				нов.Район = Стр[2];
				нов.НаселенныйПункт = Стр[3];
				нов.Улица = Стр[4];
				нов.Дом = Стр[5];
				нов.Индекс = Стр[6];
				нов.Широта = Стр[7];
				нов.Долгота = Стр[8];
				нов.АдресныйОбъект = Стр[9];
			КонецЦикла;
			Элементы.ВыбратьИзДоступныхАдресовКлиента.Видимость = Истина;
			Элементы.ВыбратьИзДоступныхАдресовКлиента.Заголовок = "Выбрать из доступных адресов клиента ("+Формат(КоличествоЗаписей,"ЧГ=0")+")";
		Иначе
			Элементы.ВыбратьИзДоступныхАдресовКлиента.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
	
		Если ЗначениеЗаполнено(Объект.Клиент) Тогда
			Объект.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Клиент,"Наименование") + ТекущаяДата();
		Иначе
			Объект.Наименование = ТекущаяДата();
		КонецЕсли;
	
	КонецЕсли;
	
	Сч = 0;
	Для Каждого Стр Из Объект.Медиаматериалы Цикл
		
		Если НЕ Стр.ЭтоСуществующийРанее и ЗначениеЗаполнено(Стр.АдресВременногоХранилища) Тогда
			
			СтрТекущийОбъект = ТекущийОбъект.Медиаматериалы[Сч];
			ДД = ПолучитьИзВременногоХранилища(Стр.АдресВременногоХранилища);
			СтруктураДанные = Новый Структура("ДД,РасширениеФайла",ДД,Стр.РасширениеФайла);
			СтрТекущийОбъект.Фото = Новый ХранилищеЗначения(СтруктураДанные);
			
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка =  Ложь;
	ОбработкаЗакрытияФормыВводаАдреса = Новый ОписаниеОповещения("ЗавершенВводАдреса",ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.ФормаВводаАдреса",,ЭтаФорма,,,,ОбработкаЗакрытияФормыВводаАдреса);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершенВводАдреса(ТекДанные,ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ТекДанные) = Тип("Структура") Тогда
		
		АдресВрем = ?(ТекДанные.Индекс=0,"",Формат(ТекДанные.Индекс,"ЧГ=0") + ", ")  +
														?(ПустаяСтрока(ТекДанные.Регион),"",ТекДанные.Регион + ", ")       +
														?(ПустаяСтрока(ТекДанные.Район),"",ТекДанные.Район + ", ")  +
														?(ПустаяСтрока(ТекДанные.НаселенныйПункт),"",ТекДанные.НаселенныйПункт + ", ")  +
														?(ПустаяСтрока(ТекДанные.Улица),"",ТекДанные.Улица + ", ")  +
														?(ПустаяСтрока(ТекДанные.Дом),"",ТекДанные.Дом + ", ");													
														
		АдресВрем = Лев(АдресВрем,СтрДлина(АдресВрем)-2);
		
		АдресДоставкиПриИзменении();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроложитьМаршрут(Команда)
	
		МассивАдресов = Новый Массив;
		
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроложитьМаршрут_ВызовСервера(МассивАдресов)
	
	оср = Новый HTTPСоединение("router.project-osrm.org", , , , , , Новый ЗащищенноеСоединениеOpenSSL());
	мТочки = Новый Массив;
	Для каждого Точка Из МассивАдресов Цикл
		мТочки.Добавить(Формат(Точка.Долгота, "ЧЦ=15; ЧДЦ=12; ЧРД=.; ЧГ=0") + "," + Формат(Точка.Широта, "ЧЦ=15; ЧДЦ=12; ЧРД=.; ЧГ=0"));
	КонецЦикла;
	Попытка
		Запрос = Новый HTTPЗапрос("/route/v1/driving/" + СтрСоединить(мТочки, ";") + "?overview=full&alternatives=true&steps=true&geometries=geojson");
		Ответ = оср.Получить(Запрос);
	Исключение
		Сообщить("Ошибка при попытке маршутизации по OSR," + Символы.ПС + "	Описание: " + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда
		Сообщить("Ошибка при попытке маршутизации по OSR");
		хтмл = Ответ.ПолучитьТелоКакСтроку();
		голова = СтрНайти(НРег(хтмл), "<head>");
		Если голова Тогда
			Возврат СтрЗаменить(хтмл, "<head>", "<head><meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/><meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>");
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	Попытка
		СтруктМаршрута = ПрочитатьJSON(ЧтениеJSON);
	Исключение
		Сообщить("Ошибка при попытке маршутизации по OSR, адрес:" + Символы.ПС + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	Если СтруктМаршрута.Свойство("code") Тогда
		Если НРег(СтруктМаршрута.code) = "ok" Тогда
			Результат = Новый Структура("Маршрут,АльтМаршрут"); 
			Если СтруктМаршрута.routes.Количество() Тогда
				Результат.Маршрут = Новый Массив;
				ОсновнойМаршрут = СтруктМаршрута.routes[0];
				Если ОсновнойМаршрут.Свойство("geometry") И ОсновнойМаршрут.geometry.coordinates.Количество() Тогда
					Для каждого Координаты Из ОсновнойМаршрут.geometry.coordinates Цикл
						Результат.Маршрут.Добавить(Новый Структура("Долгота,Широта", Координаты[0], Координаты[1]));
					КонецЦикла;
				Иначе
					Для каждого Нога Из ОсновнойМаршрут.legs Цикл
						Для каждого ШагМаршрута Из Нога.steps Цикл
							Для каждого Секция Из ШагМаршрута.intersections Цикл
								Результат.Маршрут.Добавить(Новый Структура("Долгота,Широта", Секция.location[0], Секция.location[1]));
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				Если СтруктМаршрута.routes.Количество() > 1 Тогда
					Результат.АльтМаршрут = Новый Массив;
					Альтернативный = СтруктМаршрута.routes[1];
					Если Альтернативный.Свойство("geometry") И Альтернативный.geometry.coordinates.Количество() Тогда
						Для каждого Координаты Из Альтернативный.geometry.coordinates Цикл
							Результат.АльтМаршрут.Добавить(Новый Структура("Долгота,Широта", Координаты[0], Координаты[1]));
						КонецЦикла;
					Иначе
						Для каждого Нога Из Альтернативный.legs Цикл
							Для каждого ШагМаршрута Из Нога.steps Цикл
								Для каждого Секция Из ШагМаршрута.intersections Цикл
									Результат.АльтМаршрут.Добавить(Новый Структура("Долгота,Широта", Секция.location[0], Секция.location[1]));
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Возврат Результат;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли СтруктМаршрута.Свойство("message") Тогда
		Сообщить("Ошибка при попытке маршутизации по OSR, адрес:" + Символы.ПС + СтруктМаршрута.message);
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПоказатьШиротуИДолготу(Команда)
	
	Для Каждого Стр Из СтрРазделить("Широта,Долгота,КоординатыПеремещенияШирота,КоординатыПеремещенияДолгота",",") Цикл
		Эл = Элементы[Стр];
		Эл.Видимость = НЕ Эл.Видимость;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентОткрытие(Элемент, СтандартнаяОбработка)
	
	Оповестить("ЗакрыласьФормаКонтрагента",Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	ПолучениеДоступныхАдресовКонтрагентаКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПолучениеДоступныхАдресовКонтрагентаКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзДоступныхАдресовКлиента(Команда)
	
	Элементы.СтраницыАдресИВыборАдреса.ТекущаяСтраница = Элементы.ВыборАдресаИзТаблицы;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаДоставкиКлиентВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.АдресаДоставкиКлиент.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, ТекДанные);
		Элементы.СтраницыАдресИВыборАдреса.ТекущаяСтраница = Элементы.АдресВыбранный;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьДанные_КоординатыПеремещения()
	
	Попытка
		Document = Элементы.ТекстHTML.Документ;
	Исключение
		Возврат;
	КонецПопытки;
	
	Попытка
		//Нет понимания почему оно так работает
		//markers =  Document.getElementsByName("region").markers;
		element_data_1c = Document.getElementById("data_1c");
		markers =  element_data_1c.markers;
	Исключение
		
	КонецПопытки;
	
	СтруктураПоиска = Новый Структура("Широта,Долгота");
	
	//проверим и по необходимости добавим маркер
	КоличествоМаркеров = markers.length;
	Для Сч = 0 По markers.length-1 Цикл
				
		СчСтрока = Формат(Сч,"ЧН=0; ЧГ=0");
		
		Маркер =  markers[СчСтрока];
		
		КоличествоМаркеров = КоличествоМаркеров + 1;
		
		маркерШирота = Маркер.coor["0"];
		маркерДолгота = Маркер.coor["1"];
		СтруктураПоиска.Широта =  Число(маркерШирота);
		СтруктураПоиска.Долгота = Число(маркерДолгота);
		НайденныеСтроки = Объект.КоординатыПеремещения.НайтиСтроки(СтруктураПоиска);
		Если НЕ НайденныеСтроки.Количество() Тогда
			
			нов =  Объект.КоординатыПеремещения.Добавить();
			нов.Идентификатор = Новый УникальныйИдентификатор;
			ЗаполнитьЗначенияСвойств(нов,СтруктураПоиска);
			нов.ДатаВремя = ТекущаяДата();
			
			ТекстЗапросаГеокодеру = Формат(СтруктураПоиска.Широта,"ЧГ=0")+"+"+Формат(СтруктураПоиска.Долгота,"ЧГ=0");
			ТекстЗапросаГеокодеру = СтрЗаменить(ТекстЗапросаГеокодеру,",",".");
			ДанныеГеокодирования =  ГеокодироватьАдрес(ТекстЗапросаГеокодеру);
			Если ТипЗнч(ДанныеГеокодирования) = Тип("Структура") Тогда
				нов.Адрес = ДанныеГеокодирования.Адрес;
			КонецЕсли;
			
		Иначе
			
			Для каждого Стр Из  НайденныеСтроки Цикл
				Стр.МаркерУдалён = Ложь;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоМаркеров = 0 Тогда
		//отметим факт удаления маркера
		Для Каждого Стр Из Объект.КоординатыПеремещения Цикл
			element_data_1c.new_lat = Стр.Широта;
			element_data_1c.new_lng = Стр.Долгота;
			element_data_1c.ondblclick();
			element_data_1c.new_lat = 0;
			element_data_1c.new_lng = 0;
			element_data_1c.removeAttribute("ondblclick");
			element_data_1c.setAttribute("ondblclick", "NewPoint_Continue()");
		КонецЦикла;
	КонецЕсли;
	
	//отметим факт удаления маркера
	Для Каждого Стр Из Объект.КоординатыПеремещения Цикл
		
		МаркерУдален = Истина;
		КоличествоМаркеров = markers.length;
		Для Сч = 0 По markers.length-1 Цикл
			СчСтрока = Формат(Сч,"ЧН=0; ЧГ=0");
			Маркер =  markers[СчСтрока];
			маркерШирота = Число(Маркер.coor["0"]);
			маркерДолгота = Число(Маркер.coor["1"]);
			Если Стр.Широта =  маркерШирота и Стр.Долгота = маркерДолгота Тогда
				МаркерУдален = Ложь;
				Прервать
			КонецЕсли;
		КонецЦикла;
		
		Стр.МаркерУдалён = МаркерУдален;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ГеокодироватьАдрес(Знач ТекАдрес)

	оср = Новый HTTPСоединение("nominatim.openstreetmap.org", , , , , , Новый ЗащищенноеСоединениеOpenSSL());
	мАдрес = СтрРазделить(ТекАдрес, " ");
	Попытка
		Запрос = Новый HTTPЗапрос("/?format=json&q=" + СтрСоединить(мАдрес, "+"));
		Ответ = оср.Получить(Запрос);
	Исключение
		//Сообщить("Ошибка при попытке геокодировать по OSR, адрес: " + ТекАдрес + Символы.ПС + "Описание: " + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	Попытка
		СтруктАдреса = ПрочитатьJSON(ЧтениеJSON);
	Исключение
		//Сообщить("Ошибка при попытке геокодировать по OSR, адрес: " + ТекАдрес + Символы.ПС + "Описание: " + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	Если ТипЗнч(СтруктАдреса) = Тип("Массив") Тогда
		Если СтруктАдреса.Количество() = 0 Тогда
			//Сообщить("Для адреса: """ + ТекАдрес + """ не обнаружено ни одной геопозиции");
			Возврат Неопределено;
		ИначеЕсли СтруктАдреса.Количество() > 1 Тогда
			//Сообщить("Для адреса: """ + ТекАдрес + """ обнаружено больше одной геопозиции");
		КонецЕсли;
		Адрес = СтруктАдреса[0];
		Возврат Новый Структура("Адрес,Широта,Долгота", Адрес.display_name, Адрес.lat, Адрес.lon) 
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ТекстHTMLДокументСформирован(Элемент)
		
	ПодключитьОбработчикОжидания("ПерезаполнитьДанные_КоординатыПеремещения",3,Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Попытка
	ОтключитьОбработчикОжидания("ПерезаполнитьДанные_КоординатыПеремещения");
	Исключение
	КонецПопытки;
	
	КонтрольУдаленияДанныхИзТЧ();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольУдаленияДанныхИзТЧ()
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Идентификатор");
	МассивКУдалениюГлав = Новый Массив;
	МассивКУдалениюМедиа = Новый Массив;
	МассивКУдалениюКомментарии = Новый Массив;
	Для каждого Стр Из Объект.КоординатыПеремещения Цикл
		
		Если Стр.МаркерУдалён Тогда
			
			МассивКУдалениюГлав.Добавить(Стр);
			
			СтруктураПоиска.Идентификатор =  Стр.Идентификатор;
			НайденныеСтроки = Объект.Медиаматериалы.НайтиСтроки(СтруктураПоиска);
			Для каждого Стр2 Из НайденныеСтроки Цикл
				МассивКУдалениюМедиа.Добавить(Стр2);
			КонецЦикла;
			НайденныеСтроки = Объект.КомментарииИЗаметки.НайтиСтроки(СтруктураПоиска);
			Для каждого Стр2 Из НайденныеСтроки Цикл
				МассивКУдалениюКомментарии.Добавить(Стр2);
			КонецЦикла;
			
		КонецЕсли;		
		
	КонецЦикла;
	
	Для каждого Стр Из МассивКУдалениюГлав Цикл
		Объект.КоординатыПеремещения.Удалить(Стр);
	КонецЦикла;
	Для каждого Стр Из МассивКУдалениюМедиа Цикл
		Объект.Медиаматериалы.Удалить(Стр);
	КонецЦикла;
	Для Каждого Стр Из МассивКУдалениюКомментарии Цикл
		Объект.КомментарииИЗаметки.Удалить(Стр);
	КонецЦикла;

	МассивКУдалениюМедиа = Новый Массив;
	МассивКУдалениюКомментарии = Новый Массив;
	Для каждого Стр Из Объект.Медиаматериалы Цикл
		СтруктураПоиска.Идентификатор =  Стр.Идентификатор;
		НайденныеСтроки = Объект.КоординатыПеремещения.НайтиСтроки(СтруктураПоиска);
		Если НЕ НайденныеСтроки.Количество() Тогда
			МассивКУдалениюМедиа.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	Для каждого Стр Из Объект.КомментарииИЗаметки Цикл
		СтруктураПоиска.Идентификатор =  Стр.Идентификатор;
		НайденныеСтроки = Объект.КоординатыПеремещения.НайтиСтроки(СтруктураПоиска);
		Если НЕ НайденныеСтроки.Количество() Тогда
			МассивКУдалениюКомментарии.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	Для каждого Стр Из МассивКУдалениюМедиа Цикл
		Объект.Медиаматериалы.Удалить(Стр);
	КонецЦикла;
	Для Каждого Стр Из МассивКУдалениюКомментарии Цикл
		Объект.КомментарииИЗаметки.Удалить(Стр);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключитьОбработчикОжидания("ПерезаполнитьДанные_КоординатыПеремещения",3,Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПриИзменении(Элемент=Неопределено)
	
	Если НЕ ПустаяСтрока(АдресВрем) Тогда
		
		ДанныеГеокодирования =  ГеокодироватьАдрес(АдресВрем);
		Если ТипЗнч(ДанныеГеокодирования) = Тип("Структура") Тогда
			
			АдресВрем = ДанныеГеокодирования.Адрес;
			
			//добавим маркер
			Попытка
				Document = Элементы.ТекстHTML.Документ;
				//element_data_1c = Document.getElementsByName("region");
				element_data_1c = Document.getElementById("data_1c");												 
			Исключение
				Возврат;
			КонецПопытки;

			element_data_1c.new_lat = ДанныеГеокодирования.Широта;
			element_data_1c.new_lng = ДанныеГеокодирования.Долгота;
			element_data_1c.ondblclick();
			element_data_1c.new_lat = 0;
			element_data_1c.new_lng = 0;
			element_data_1c.removeAttribute("ondblclick");
			element_data_1c.setAttribute("ondblclick", "NewPoint_Continue()");
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
